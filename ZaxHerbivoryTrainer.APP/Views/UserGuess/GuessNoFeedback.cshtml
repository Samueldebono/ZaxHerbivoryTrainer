
@model GuessViewModel

@{
    var FinishingImageNumber = 50;
    //var FinishedPercentage = 98;
    var FinishedTime = 1800;
}
<script id="rendered-js" src="~/js/Guesses/slider-controller.js"></script>

<script type="text/javascript">
    var finishingImageNumber = @FinishingImageNumber;
    var finishedTime = @FinishedTime;
    var timer;
    var usedImages = [];
    var mins = 0;
    var startoverall = new Date;
    var guessCheckUrl = '@Url.Action("GuessCheck", "UserGuess")';
    var getNewImageUrl = '@Url.Action("GetNewImage", "UserGuess")';
    var modelId = '@Model.UserId';
    var phase = '@Model.Phase';
    $(document).ready(function() {
        setCookie("userHash", '@Model.UserHash', '@DateTime.Now.AddDays(1)');
        usedImages.push('@Model.CurrentImageId');
        if (phase === '@((byte)Phase.ONE)'){
            GreetingsMessage(1);
            }
        else {
            PhaseMessage(phase);
            }
    });

</script>
<script src="~/js/Guesses/answer-popup-controller.js"></script>
<script src="~/js/Guesses/phase-no-feedback-controller.js"></script>
<script src="~/js/Messages/PhaseOpeningMessage.js"></script>
<script src="~/js/Messages/GreetingsMessage.js"></script>


@using (Html.BeginForm("GuessNoFeedback", "UserGuess", FormMethod.Post))
{
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.UserHash)
    @Html.HiddenFor(m => m.CurrentCloudinaryUrl)
    @Html.HiddenFor(m => m.CurrentImageId)
    @Html.HiddenFor(m => m.ReturningTimer)
    @Html.HiddenFor(m => m.Phase)

    <div id="navigation">
        <div class="navigation-wrapper">
            <span class="navigation-home">ZAX Herbivory Trainer</span>
        </div>
    </div>

    <div class="card">
        <img id="image_Id" src="@Model.CurrentCloudinaryUrl" alt="Avatar">
        <div class="text_container">
            <h4>Phase @(Model.Phase + 1) - Estimate the percentage of leaf damage</h4>
            <p id="accuracyArea" class="timer-text @(Model.ImagesUsed.HasValue && Model.ImagesUsed.Value > 0  ? "": "hide")"> <img id="actIcon" src="~/images/accuracy_black.png" class="timer-icon"></p> <p id="imageCount" class="counter-text"> </p>
            <div class="slider">
                <input type="range"
                       name="participants"
                       min="0"
                       max="100"
                       value="0">
                <span class="rangeslider__tooltip" id="range-tooltip"></span>
            </div>
            <div class="button-box">
                <button type="button" id="btnGuess" class="myButton @(Model.ImagesUsed.HasValue && Model.ImagesUsed.Value >= FinishingImageNumber ? "hide" :"")">SUBMIT</button>
                <input id="btnGuess-finished" class="myButton @((Model.ImagesUsed.HasValue && Model.ImagesUsed.Value >= FinishingImageNumber) ? "" :"hide")" type="submit" value="@((Model.Phase == (byte)Phase.THREE) ? "FINISHED" : "NEXT PHASE")" />

            </div>
            @*<div class="timer">
            <p id="accuracyArea" class="timer-text @(@Model.ImagesUsed.HasValue ? "": "hide")"> <img id="actIcon" src="~/images/accuracy_black.png" class="timer-icon"></p> <p id="accuracyResult" class="timer-text @(@Model.ImagesUsed.HasValue ? "": "hide")">@Model.ImagesUsed.Value/@FinishingImageNumber</p>
        </div>*@
        </div>
    </div>

    <div id="overlay"></div>
    @Html.TextBoxFor(m => m.Timer, new { @class = "hide" })
    @Html.TextBoxFor(m => m.FinalPercentage, new { @class = "hide" })
    @Html.TextBoxFor(m => m.ImagesUsed, new { @class = "hide" })
}

@Html.Partial("_Menubar")